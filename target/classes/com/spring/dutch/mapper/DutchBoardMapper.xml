<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.dutch.mapper.DutchBoardMapper">

	<update id="insertParticipants" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL">
			INTO dutch.tbl_participants
				(
				pno,
	            ptitle,
	            pregDate,
	            ppersonal,
	            pcalculated,
	            nickname
				)
			VALUES
				(
				#{item.pno},
	            #{item.ptitle},
	            #{item.pregDate},
	            #{item.ppersonal},
	            #{item.pcalculated},
	            #{item.nickname}
				)
		</foreach>
	</update>
	
	
	

<!-- 더치페이 목록조회(READ) -->
	<select id="selectDutchBoardList" resultType="com.spring.dutch.domain.DutchBoardVO"
	        parameterType="com.spring.dutch.dto.DutchBoardPagingDTO">
	<![CDATA[
		SELECT pno, category, nickname, ptitle, pcontent, pregDate, 
			   pmodDate, pdelFlag, preport, ppersonal, ptotalPayment, pcalculated
		FROM ( SELECT /*+ INDEX_DESC (a pk_pno_dutch) */ ROWNUM rn, a.* 
               FROM dutch.tbl_dutch a
               WHERE
	]]>
	<choose>
		<when test="(beginDate != null and beginDate != '') and (endDate != null and endDate != '')">
			 	pregDate BETWEEN TO_DATE(#{beginDate}, 'YYYY-MM-DD')
			 				 AND TO_DATE(#{endDate}, 'YYYY-MM-DD')+1 AND
		</when>
	</choose>
		<trim prefix="(" suffix=") AND" prefixOverrides="OR" >
			<foreach item='scope' collection="myScopeArr">
				<trim prefix="OR">
					<choose>
						<when test="scope == 'T'.toString()">ptitle LIKE '%'||#{keyword}||'%'</when>
						<when test="scope == 'C'.toString()">pcontent LIKE '%'||#{keyword}||'%'</when>
						<when test="scope == 'W'.toString()">nickname LIKE '%'||#{keyword}||'%'</when>
					</choose>
				</trim> 
			</foreach>
		</trim>
	<![CDATA[      			       
			       ROWNUM <= (#{pageNum} * #{rowAmountPerPage})
			      )
			WHERE rn > = ((#{pageNum} * #{rowAmountPerPage}) - (#{rowAmountPerPage} - 1 ))
	]]>

	</select>

<!-- 더치페이 게시물 총 개수 조회(페이징): 삭제 요청된 행 포함 --> 	
	<select id="selectDutchRowTotal" resultType="long"
			parameterType="com.spring.dutch.dto.DutchBoardPagingDTO">
		SELECT count(*) rowtotal FROM dutch.tbl_dutch
		<where>
			<trim prefix="(" suffix=")" prefixOverrides="OR">
				<foreach item='scope' collection="myScopeArr">
					<trim prefix="OR">
						<choose>
							<when test="scope == 'T'.toString()">ptitle LIKE '%'||#{keyword}||'%'</when>
							<when test="scope == 'C'.toString()">pcontent LIKE '%'||#{keyword}||'%'</when>
							<when test="scope == 'W'.toString()">nickname LIKE '%'||#{keyword}||'%'</when>
						</choose>
					</trim> 
				</foreach>
			</trim>
			<choose>
				<when test="(beginDate != null and beginDate != '') and (endDate != null and endDate != '')">
					AND pregDate BETWEEN TO_DATE(#{beginDate}, 'YYYY-MM-DD')
				 		 		     AND TO_DATE(#{endDate}, 'YYYY-MM-DD')
				</when>
			</choose>	 
		</where>
	</select>

<!-- 게시물 등록(CREATE) -->

<insert id="insertDutchBoard" parameterType="com.spring.dutch.domain.DutchBoardVO">
	<selectKey order="BEFORE" keyProperty="pno" resultType="long">
		SELECT dutch.seq_dutch.nextval from dual
	</selectKey>

			INSERT INTO dutch.tbl_dutch
			VALUES (#{pno},
			        #{category},
			        #{nickname},
			        #{ptitle},
			        #{pcontent},
			        DEFAULT,
			        DEFAULT,
			        DEFAULT,
			        DEFAULT,
			        #{ppersonal},
			        #{ptotalPayment},
			        DEFAULT)
</insert>

<!-- 특정 게시물 조회: (detail.jsp)-->
<select id="selectDutchBoard" resultType="com.spring.dutch.domain.DutchBoardVO">
	SELECT pno, category, nickname, ptitle, pcontent, pregDate, 
		   pmodDate, pdelFlag, preport, ppersonal, ptotalPayment, pcalculated
	FROM dutch.tbl_dutch WHERE pno = #{pno}
</select>	

<!-- Participants테이블에서 정보 꺼내오기-->
<select id="selectForParticipants" parameterType="com.spring.dutch.domain.DutchBoardVO"
		resultType="com.spring.dutch.domain.DutchBoardVO">
	select pno, ptitle, pregDate, ppersonal, pcalculated
	from dutch.tbl_dutch
	where nickname = #{nickname} and ptitle = #{ptitle}
</select>

<select id="selectForParticipantsByPno" parameterType="com.spring.dutch.domain.DutchBoardVO"
		resultType="com.spring.dutch.domain.DutchBoardVO">
	select pno, ptitle, pregDate, ppersonal, pcalculated
	from dutch.tbl_dutch
	where pno = #{pno}
</select>

<!-- 위에꺼랑 헷갈리지마셈 이건 디테일페이지로 불러올 때 쓰는 sql -->
<select id="selectParticipants" parameterType="long" 
      resultType="com.spring.dutch.domain.ParticipantsVO">
   select pno, ptitle, pregDate, ppersonal, pcalculated, nickname
   from dutch.tbl_participants
   where pno = #{pno}
   
</select>


<!-- 페이방 수정할 때 Participants테이블에 다시 업데이트 하기위해서 일단 삭제먼저 -->
<delete id="deleteParticipants" parameterType="long">
	DELETE FROM dutch.tbl_participants
	WHERE pno = #{pno} 
</delete>

<!-- 게시물 수정(UPDATE)-->
	<update id="updateDutchBoard" parameterType="com.spring.dutch.domain.DutchBoardVO">
		UPDATE dutch.tbl_dutch
		SET category = #{category} ,
		    ptitle = #{ptitle} ,
		    pcontent = #{pcontent} ,
		    pmoddate =  sysdate,
		    ppersonal = #{ppersonal} ,
		    ptotalpayment = #{ptotalPayment}
		WHERE pno = #{pno}
	</update>

<!-- 게시물 삭제(DELETE)-->
	<delete id="deleteDutchBoard" parameterType="long">
		DELETE FROM dutch.tbl_dutch
		WHERE pno = #{pno}
	</delete>

<!-- 정산 완료 UPDATE)-->
	<update id="updatePcalDutch" parameterType="long">
		UPDATE dutch.tbl_dutch
		SET pcalculated = '1' 
		WHERE pno = #{pno}
	</update>
	
	<update id="updatePcalParti" parameterType="long">
		UPDATE dutch.tbl_participants
		SET pcalculated = '1' 
		WHERE pno = #{pno}
	</update>

<!-- 사용자가 신고 (UPDATE)-->
	<update id="updatePreport" parameterType="long">
		UPDATE dutch.tbl_dutch
		SET preport = 1
		WHERE pno =  #{pno}
	</update>


</mapper>